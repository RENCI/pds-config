openapi: 3.0.0
# Added by API Auto Mocking Plugin
info:
  description: "The PDS is the main interface to the PDS application for providing clinical decision support for end users. The PDS is a highly fault-tolerant system, meaning that it will attempt to correct errors in order to keep running and avoid catastrophic failure. This means that these endpoints will attempt to return some kind of meaningful data along with 4xx (Client Error) and 5xx (Server Error) status codes. The onus is on the client to check and determine how to render the data returned along with these codes." 
  version: "5"
  title: "PDS plugin: primary platform interface"
  contact:
    email: txscience@lists.renci.org
paths:
  /config:
    get:
      summary: Configuration and default info for plugin(s)
      description: "Gets list of plugins with their selector values, default parameter settings, and required patient variables. Legal values for selectors is optional, and if required, call the '/selectors' endpoint. Legal values for a plugin's parameters and required patient variables, if any, can be found with this call."
      operationId: api.get_config
      responses:
        '200':
          description: "Config matching query"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginConfig'
                example:
                  [ {
                      "title": "Aminoglycoside dosing guidance",
                      "piid": "pdspi-aminoglycoside-nomogram",
                      "pluginType": "g",
                      "pluginSelectors": [ {
                          "title": "Drug",
                          "id": "dosing.rxCUI",
                          "selectorValue": {
                            "value": "rxCUI:1596450",
                            "title": "Gentamicin" }
                          } ],
                      "pluginParameterDefaults": [ {
                          "id": "pdspi-guidance-example:1",
                          "title": "Extended interval nomogram",
                          "parameterDescription": "This calculator uses one of four extended-interval nomograms. Please choose one nomogram.",
                          "parameterValue": { "value": "Hartford" },
                          "legalValues": {
                            "type": "string",
                            "enum": [ "Hartford", "Urban-Craig", "Conventional A", "Conventional B" ] }
                        } ],
                      "requiredPatientVariables": [ {
                          "id": "LOINC:30525-0",
                          "title": "Age",
                          "legalValues": { "type": "number", "minimum": "0" },
                          "why": "Age is used to calculate the creatinine clearance. Dosing is lower for geriatric patient and contraindicated for pediatric patients"
                        },
                        {
                          "id": "LOINC:39156-5",
                          "title": "BMI",
                          "legalValues": { "type": "number", "minimum": "0" },
                          "why": "BMI is used to calculate the creatinine clearance. Dosing is higher for patients with higher BMI"
                        }]
                    } ]
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "[<piid>] is not a valid plugin",
                      "source": "client",
                      "level": 4,
                      "action": "Returning all plugins"
                      } ]
                  configs:
                    type: array
                    items:
                      $ref: '#/components/schemas/PluginConfig'
                    example:
                      [ {
                          "title": "Aminoglycoside dosing guidance",
                          "piid": "pdspi-aminoglycoside-nomogram",
                          "pluginType": "g",
                          "pluginSelectors": [ {
                              "title": "Drug",
                              "id": "dosing.rxCUI",
                              "selectorValue": {
                                "value": "rxCUI:1596450",
                                "title": "Gentamicin" }
                              } ],
                          "pluginParameterDefaults": [ {
                              "id": "pdspi-guidance-example:1",
                              "title": "Extended interval nomogram",
                              "parameterDescription": "This calculator uses one of four extended-interval nomograms. Please choose one nomogram.",
                              "parameterValue": { "value": "Hartford" },
                              "legalValues": {
                                "type": "string",
                                "enum": [ "Hartford", "Urban-Craig", "Conventional A", "Conventional B" ] }
                            } ],
                          "requiredPatientVariables": [ {
                              "id": "LOINC:30525-0",
                              "title": "Age",
                              "legalValues": { "type": "number", "minimum": "0" },
                              "why": "Age is used to calculate the creatinine clearance. Dosing is lower for geriatric patient and contraindicated for pediatric patients"
                            },
                            {
                              "id": "LOINC:39156-5",
                              "title": "BMI",
                              "legalValues": { "type": "number", "minimum": "0" },
                              "why": "BMI is used to calculate the creatinine clearance. Dosing is higher for patients with higher BMI"
                            }]
                        } ]
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "No default Mapper and multiple compatible Mappers for FHIR server [pdspi-fhir-example].",
                      "source": "admin user",
                      "level": 1,
                      "action": " Chose arbitrary Mapper[pdspi-mapper-example]"
                      } ]
                  configs:
                    type: array
                    items:
                      $ref: '#/components/schemas/PluginConfig'
                    example:
                      [ {
                          "title": "Aminoglycoside dosing guidance",
                          "piid": "pdspi-aminoglycoside-nomogram",
                          "pluginType": "g",
                          "pluginSelectors": [ {
                              "title": "Drug",
                              "id": "dosing.rxCUI",
                              "selectorValue": {
                                "value": "rxCUI:1596450",
                                "title": "Gentamicin" }
                              } ],
                          "pluginParameterDefaults": [ {
                              "id": "pdspi-guidance-example:1",
                              "title": "Extended interval nomogram",
                              "parameterDescription": "This calculator uses one of four extended-interval nomograms. Please choose one nomogram.",
                              "parameterValue": { "value": "Hartford" },
                              "legalValues": {
                                "type": "string",
                                "enum": [ "Hartford", "Urban-Craig", "Conventional A", "Conventional B" ] }
                            } ],
                          "requiredPatientVariables": [ {
                              "id": "LOINC:30525-0",
                              "title": "Age",
                              "legalValues": { "type": "number", "minimum": "0" },
                              "why": "Age is used to calculate the creatinine clearance. Dosing is lower for geriatric patient and contraindicated for pediatric patients"
                            },
                            {
                              "id": "LOINC:39156-5",
                              "title": "BMI",
                              "legalValues": { "type": "number", "minimum": "0" },
                              "why": "BMI is used to calculate the creatinine clearance. Dosing is higher for patients with higher BMI"
                            }]
                        } ]
  /selectors:
    get:
      summary: List all PDS selectors
      description: List selectors and the legal values that can be used for choosing plugins
      operationId: api.get_selectors
      responses:
        '200':
          description: "List of all selectors used by installed plugins (possibly a subset of all supported selectors)."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Selector'
                example:
                  [ {"title": "Drug",
                      "id": "dosing.rxCUI",
                      "legalValues": {
                        "type": "string",
                        "enum": [ {"value": "rxCUI:1596450", "title": "Gentamicin"}, {"value": "rxCUI:1114195"}, {"value": "rxCUI:1546356"}, {"value": "rxCUI:1364430"}, {"value": "rxCUI:1599538"}, {"value": "rxCUI:1927851"}
                        ] 
                      }
                    } ]
        '400':
          description: "Bad Request"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Unknown query paramaters",
                      "source": "client",
                      "level": 4,
                      "action": "Ignoring query parameters"
                      } ]
                  selectors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Selector'
                    example:
                      [ {"title": "Drug",
                          "id": "dosing.rxCUI",
                          "legalValues": {
                            "type": "string",
                            "enum": [ {"value": "rxCUI:1596450", "title": "Gentamicin"}, {"value": "rxCUI:1114195"}, {"value": "rxCUI:1546356"}, {"value": "rxCUI:1364430"}, {"value": "rxCUI:1599538"}, {"value": "rxCUI:1927851"}
                            ] 
                          }
                        } ]
        '500':
          description: "Internal Server Error"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                    example: [  {
                      "timestamp": "2019-09-20T00:00:01Z",
                      "event": "Guidance plugin[pdspi-guidance-example] not responding after multiple attempts",
                      "source": "pds",
                      "level": 2,
                      "action": "Disabled plugin[pdspi-guidance-example]"
                      } ]
                  selectors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Selector'
                    example: [  ]
    put:
      summary: Modify all PDS selectors
      description: Modify selectors and the legal values that can be used for choosing plugins
      operationId: api.put_selectors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Selector'
      responses:
        200:
          description: ""
          content:
            application/json:
              schema: {}
  /customUnits:
    get:
      summary: List all PDS selectors
      description: List selectors and the legal values that can be used for choosing plugins
      operationId: api.get_custom_units
      responses:
        '200':
          description: "List of all selectors used by installed plugins (possibly a subset of all supported selectors)."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomUnit'
    put:
      summary: Modify all PDS selectors
      description: Modify selectors and the legal values that can be used for choosing plugins
      operationId: api.put_custom_units
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomUnit'
      responses:
        200:
          description: ""
          content:
            application/json:
              schema: {}
  /config/{piid}:
    get:
      operationId: api.get_plugin_config
      parameters:
        - name: piid
          description: "If present, include only information about the indicated plugin. if not present, return all guidance piids and their info."
          example: "pdspi-guidance-example."
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PluginConfig"
    put:
      operationId: api.put_plugin_config
      parameters:
        - name: piid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PluginConfigInput"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema: {}
    delete:
      operationId: api.delete_plugin_config
      parameters:
        - name: piid
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema: {}
components:
  schemas:
    Message:
      description: "This schema mirrors the 'Log' schema from tx-logging (see github.com/RENCI/tx-logging)."
      type: object
      required:
        - timestamp
        - event
        - source
        - level
      properties:
        -id:
          not: {}
        timestamp:
          type: string
          format: date-time
          example: "2019-09-20T00:00:00Z"
        event:
          type: string
          example: "The specified mapper (pdspi-mapper-example) is not compatible with the specified FHIR server (pdspi-fhir-hapi)."
        source:
          type: string
          example: "admin user"
        level:
          description: "The level value mirrors syslog values, as follows: 1 - alert, 'immediate action is needed' : e.g., the data will be returned, but PDS picked a mapper/server at random because no default was selected; 2 - critical: this could indicate resources are nearing full, or similar; 3 - error: something unexpected happened, PDS tried to correct for it, but the admin should be alerted; 4 - warning: PDS had to correct something unexpectedly but all is well; 5 - notification, 'Normal but significant condition': a dashboard might chose to render this message in a special console box; 6 - informational: same as above, but for auditing; 7 - debugging: maybe the dashboard has an optional debugging console box for handling debug messages."
          type: integer
          enum: [1,2,3,4,5,6,7]
          example: 1
        action:
          type: string
          example: "Arbitrarily chose this FHIR server from those available: (pdspi-fhir-example). Only one FHIR server is available that is also compatible with pdspi-mapper-example"
    PluginConfig:
      type: object
      required:
        - piid
        - pluginType
        - requiredPatientVariables
      properties:
        title:
          type: string
          description: "Meaningful name for this plugin"
          example: "Aminoglycoside dosing guidance"
        piid:
          type: string
          description: "A string, unique to this deployment, used to identify this plugin in realtime"
          example: "pdspi-aminoglycoside-nomogram"
        enabled:
          type: boolean
        pluginType:
          type: string
          enum: [e,g,m,mD,f,fD]
          description: "A value from the enumeration below identifying the plugin type. 'g'=Guidance, 'c'=convenience, 'm'=mapper, 'f'=FHIR data server, 'mD'= default mapper, 'fD'=default FHIR server. In the clinical arena, only one FHIR server and only one mapper is allowed, and this can be indicated either with the defaults, or by only installing one mapper and one FHIR plugin type."
          example: "g"
        pluginTypeTitle:
          type: string
          description: "A human-readable value for the type. 'g'=Guidance, 'c'=Convenience, 'm'=Mapping, 'f'=FHIR, 'mD'=Default Mapping plugin, 'fD'=Default FHIR plugin"
        pluginDependencies:
          type: array
          items:
            type: string
            description: "An array of container names upon which the plugin in question depends. For example, 'txscience/pds-fhir-example:0.2.0'. Mapper plugins must indicate a dependency on one or more FHIR plugins, but dependencies are discouraged otherwise in order to maintain the decoupling and reuse of plugins. Every plugin of type 'm' and 'mD' must have at least one 'f' or 'fD' plugin listed in pluginDependencies, otherwise return 500."
        pluginSelectors:
          description: "Maps the piid to a set of selector values. Optionally call the /selectors endpoint first to get the full list of available selectors and their legal values. For example, two selectors might be 1. drug type and 2. indication. If the client selects values for the selector that matches all piid selector values, then this plugin can provide guidance. Potentially, a decision tree could be implemented here by prefacing each selectorarray item with logic, but for this API version we will instead always AND all the selector array elements. For example, 'if guidance is requried for drug _x_ AND indication _y_ then use plugin _z_'."
          type: array
          items:
            $ref: '#/components/schemas/Selector'
        pluginParameterDefaults:
          description: "Default, typed values for any parameters that might be required by the plugin"
          type: array
          items:
            $ref: '#/components/schemas/PluginParameter'
        requiredPatientVariables:
          type: array
          items:
            $ref: '#/components/schemas/RequiredPatientVariable'
    PluginConfigInput:
      type: object
      properties:
        title:
          type: string
          description: "Meaningful name for this plugin"
          example: "Aminoglycoside dosing guidance"
        piid:
          type: string
          description: "A string, unique to this deployment, used to identify this plugin in realtime"
          example: "pdspi-aminoglycoside-nomogram"
        enabled:
          type: boolean
        pluginType:
          type: string
          enum: [e,g,m,mD,f,fD]
          description: "A value from the enumeration below identifying the plugin type. 'g'=Guidance, 'c'=convenience, 'm'=mapper, 'f'=FHIR data server, 'mD'= default mapper, 'fD'=default FHIR server. In the clinical arena, only one FHIR server and only one mapper is allowed, and this can be indicated either with the defaults, or by only installing one mapper and one FHIR plugin type."
          example: "g"
        pluginTypeTitle:
          type: string
          description: "A human-readable value for the type. 'g'=Guidance, 'c'=Convenience, 'm'=Mapping, 'f'=FHIR, 'mD'=Default Mapping plugin, 'fD'=Default FHIR plugin"
        pluginDependencies:
          type: array
          items:
            type: string
            description: "An array of container names upon which the plugin in question depends. For example, 'txscience/pds-fhir-example:0.2.0'. Mapper plugins must indicate a dependency on one or more FHIR plugins, but dependencies are discouraged otherwise in order to maintain the decoupling and reuse of plugins. Every plugin of type 'm' and 'mD' must have at least one 'f' or 'fD' plugin listed in pluginDependencies, otherwise return 500."
        pluginSelectors:
          description: "Maps the piid to a set of selector values. Optionally call the /selectors endpoint first to get the full list of available selectors and their legal values. For example, two selectors might be 1. drug type and 2. indication. If the client selects values for the selector that matches all piid selector values, then this plugin can provide guidance. Potentially, a decision tree could be implemented here by prefacing each selectorarray item with logic, but for this API version we will instead always AND all the selector array elements. For example, 'if guidance is requried for drug _x_ AND indication _y_ then use plugin _z_'."
          type: array
          items:
            $ref: '#/components/schemas/Selector'
        pluginParameterDefaults:
          description: "Default, typed values for any parameters that might be required by the plugin"
          type: array
          items:
            $ref: '#/components/schemas/PluginParameter'
        requiredPatientVariables:
          type: array
          items:
            $ref: '#/components/schemas/RequiredPatientVariable'
    PluginParameter:
      type: object
      required:
        - id
        - parameterValue
      properties:
        id:
          type: string
          description: "The id for one of the parameters used by the plugin in question. Parameters are completely defined by the plugin and need not be interchangable with other plugins. The client will have no prior knowledge for plugin parameters."
          example: "pdspi-guidance-example:1"
        title: 
          type: string
          description: "A non-standardized, human-readable string to describe the id. May be implemented by the PDS to aid in debugging, clients should not depend on this value."
          example: "Extended interval nomogram"
        parameterDescription:
          type: string
          description: "Description provided by the plugin. The plugin, not the client, is therefore responsible for converting the descriptions to the appropriate language based on internationalization and personalization preferences."
          example: "This calculator uses one of four extended-interval nomograms. Please choose one nomogram."
        parameterValue:
          type: string
          description: "The actual value of the parameter. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: {"value": "Hartford"}
        legalValues:
          type: string
          description: "The 'legalValues' will always be present in the '/config' endpoint response and need not be provided to or from the client in the '/guidance' endpoint call. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
          example: { "type": "string", "enum": ["Hartford", "Urban-Craig", "Conventional A", "Conventional B"] }
    RequiredPatientVariable:
      type: object
      required:
        - id
        - legalValues
        - certitude
        - why
      properties:
        id:
          type: string
          description: "The id for one of the patient variables supported by this PDS version. The client has the option of ignoring this variable if it doesn't recognize the id."
          example: "LOINC:30525-0"
        title:
          type: string
          description: "A non-standardized, human-readable string to describe the id. May be implemented by the PDS to aid in debugging, clients should not depend on this value. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: "Age"
        legalValues:
          type: string
          description: "If absent, all values are legal, so treat the value like a string. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. The client should have prior knowledge of the supported patient variables, and thus should provide it's own human-readable titles for representation on any end-user interfaces in the appropriate language. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
          example: { "type": "number", "minimum": "0" }
        why:
          type: string
          description: "Provides the client with a human-readable, non-standard justification for why the plugin needs this particular variable. This can be rendered by the client to provide the end-user with rationale for the patient values, but does not address how the value was computed."
          example: "Age is used to calculate the creatinine clearance. Dosing is lower for geriatric patient and contraindicated for pediatric patients"
        certitude:
          type: integer
    Selector:
      description: "Used for selecting plugins"
      type: object
      required:
        - id
      properties:
        title:
          type: string
          example: "Drug"
          description: "Human-readable name for this selector type."
        id:
          type: string
          description: "The client should have prior knowledge of the full list of selectors available with this version of the PDS. This id is used to determine which selector type is described."
          example: "dosing.rxCUI"
        selectorValue:
          type: string
          description: "Unique identifier for this type. Stylistically, community standard coding system used for this type will preface the code used, e.g., rxCUI:1596450. If no standard exists 'PDS:<id>' will be used. The 'title' property illustrated in the example is optional and might be used by the PDS for debugging purposes. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user. "
          example: {"value": "rxCUI:1596450", "title": "Gentamicin"}
        legalValues:
          type: object
          description: "If absent, all values are legal, so treat the value like a string. Use the JSON schema, https://json-schema.org/draft/2019-09/json-schema-validation.html. For example, { type: 'string', 'enum': [ 'Gentamicin', 'Amikacin' ] } to define an enumeration,  { 'type': 'number' } for a float, and { 'type': 'number', 'minimum': '0' } for a positive number, and { 'type': 'integer' } for an integer. Furthermore, a non-standard 'title' can be added in support of a human-readable string for the type's value. This maybe be implemented by the PDS to aid in debugging, however clients should not depend on this value. NOTE: This value is actually an object type, but we use 'string' here to overcome a shortcoming of the swagger ui. This design choice was made in order to prioritize a better interactive documentation experience for the API user."
          example: { "type": "string", "enum": [{"value": "rxCUI:1596450", "title": "Gentamicin"},{"value": "rxCUI:1114195"},{"value": "rxCUI:1546356"},{"value": "rxCUI:1364430"},{"value": "rxCUI:1599538"},{"value": "rxCUI:1927851"}] }
    CustomUnit:
      description: ""
      type: object
      required:
        - id
        - units
      properties:
        title:
          type: string
          example: "Drug"
          description: "Human-readable name for this selector type."
        id:
          type: string
          description: "The client should have prior knowledge of the full list of selectors available with this version of the PDS. This id is used to determine which selector type is described."
          example: "dosing.rxCUI"
        units:
          type: string
          description: "custom unit"
          example: "years"

